[["index.html", "NAB RShiny Workshop Chapter 1 About 1.1 Usage", " NAB RShiny Workshop Ben Block (Tetra Tech) 2021-11-12 Chapter 1 About This bookdown is intended to be a virtual hand-out that provides all the code necessary to participate in the NAB RShiny Workshop. 1.1 Usage Each chapter represents a different lesson and corresponds to the workshop presentation provided by Ben Block. "],["lesson-1.html", "Chapter 2 Lesson 1 2.1 My first app 2.2 Input example 2.3 Practice Problem #1 2.4 Practice Problem #2", " Chapter 2 Lesson 1 2.1 My first app #L01_Script01_MyFirstApp library(shiny) ui &lt;- fluidPage( &quot;Hello, world!&quot; ) server &lt;- function(input, output, session) { } shinyApp(ui, server) 2.2 Input example # L01_Script02_InputExample library(shiny) ui &lt;- fluidPage( sliderInput(inputId = &quot;num&quot;, label = &quot;Choose a number&quot;, value = 25, min = 1, max = 100), plotOutput(&quot;hist&quot;) ) server &lt;- function(input, output, session) { output$hist &lt;- renderPlot({ hist(rnorm(input$num)) }) } shinyApp(ui, server) 2.3 Practice Problem #1 2.3.1 Solution # L01_Script03_PPSolution01 library(shiny) ui &lt;- fluidPage( textInput(&quot;name&quot;, &quot;What&#39;s your name?&quot;), textOutput(&quot;greeting&quot;) ) server &lt;- function(input, output, session) { output$greeting &lt;- renderText({ paste0(&quot;Hello &quot;, input$name) }) } shinyApp(ui, server) 2.4 Practice Problem #2 2.4.1 Question # L01_Script04_PPQuestion02 library(shiny) ui &lt;- fluidPage( sliderInput(&quot;x&quot;, label = &quot;If x is&quot;, min = 1, max = 50, value = 30), sliderInput(&quot;y&quot;, label = &quot;If y is&quot;, min = 1, max = 25, value = 8), &quot;then x times y is&quot;, textOutput(&quot;product&quot;) ) server &lt;- function(input, output, session) { output$product &lt;- renderText({ x * y }) } shinyApp(ui, server) 2.4.2 Solution # L01_Script05_PPSolution02 library(shiny) ui &lt;- fluidPage( sliderInput(&quot;x&quot;, label = &quot;If x is&quot;, min = 1, max = 50, value = 30), sliderInput(&quot;y&quot;, label = &quot;If y is&quot;, min = 1, max = 25, value = 8), &quot;then x times y is&quot;, textOutput(&quot;product&quot;) ) server &lt;- function(input, output, session) { output$product &lt;- renderText({ input$x * input$y }) } shinyApp(ui, server) "],["lesson-2.html", "Chapter 3 Lesson 2 3.1 Example #1 3.2 render*() 3.3 reactive() 3.4 isolate() 3.5 observeEvent() 3.6 eventReactive() 3.7 reactiveValues() 3.8 Practice Problem #2 3.9 Practice Problem #3", " Chapter 3 Lesson 2 3.1 Example #1 #L02_Script01_Example1 library(shiny) ui &lt;- fluidPage( textInput(&quot;name&quot;, &quot;What&#39;s your name?&quot;), textOutput(&quot;greeting&quot;) ) server &lt;- function(input, output, session) { output$greeting &lt;- renderText({ paste0(&quot;Hello &quot;, input$name, &quot;!&quot;) }) } shinyApp(ui, server) 3.2 render*() #L02_Script02_Render library(shiny) ui &lt;- fluidPage( sliderInput(inputId = &quot;num&quot;, label = &quot;Choose a number&quot;, value = 25, min = 1, max = 100), textInput(inputId = &quot;title&quot;, label = &quot;Write a title&quot;, value = &quot;Histogram of Random Normal Values&quot;), plotOutput(&quot;hist&quot;) ) server &lt;- function(input, output) { output$hist &lt;- renderPlot({ hist(rnorm(input$num), main = input$title) }) } shinyApp(ui = ui, server = server) 3.3 reactive() #L02_Script03_Reactive library(shiny) ui &lt;- fluidPage( sliderInput(inputId = &quot;num&quot;, label = &quot;Choose a number&quot;, value = 25, min = 1, max = 100), plotOutput(&quot;hist&quot;), verbatimTextOutput(&quot;stats&quot;) ) server &lt;- function(input, output) { output$hist &lt;- renderPlot({ hist(rnorm(input$num)) }) output$stats &lt;- renderPrint({ summary(rnorm(input$num)) }) } shinyApp(ui = ui, server = server) 3.4 isolate() #L02_Script04_Isolate library(shiny) ui &lt;- fluidPage( sliderInput(inputId = &quot;num&quot;, label = &quot;Choose a number&quot;, value = 25, min = 1, max = 100), textInput(inputId = &quot;title&quot;, label = &quot;Write a title&quot;, value = &quot;Histogram of Random Normal Values&quot;), plotOutput(&quot;hist&quot;) ) server &lt;- function(input, output) { output$hist &lt;- renderPlot({ hist(rnorm(input$num) , main = isolate({input$title})) }) } shinyApp(ui = ui, server = server) 3.5 observeEvent() #L02_Script05_observeEvent library(shiny) ui &lt;- fluidPage( actionButton(inputId = &quot;clicks&quot;, label = &quot;Click me&quot;) ) server &lt;- function(input, output) { observeEvent(input$clicks , showNotification(input$clicks)) } shinyApp(ui = ui, server = server) 3.6 eventReactive() #L02_Script06_eventReactive library(shiny) ui &lt;- fluidPage( sliderInput(inputId = &quot;num&quot;, label = &quot;Choose a number&quot;, value = 25, min = 1, max = 100), actionButton(inputId = &quot;go&quot;, label = &quot;Update&quot;), plotOutput(&quot;hist&quot;) ) server &lt;- function(input, output) { data &lt;- eventReactive(input$go, { rnorm(input$num) }) output$hist &lt;- renderPlot({ hist(data()) }) } shinyApp(ui = ui, server = server) 3.7 reactiveValues() #L02_Script07_reactiveValues library(shiny) ui &lt;- fluidPage( actionButton(&quot;up&quot;, &quot;up&quot;), actionButton(&quot;down&quot;, &quot;down&quot;), textOutput(&quot;n&quot;) ) server &lt;- function(input, output, session) { r &lt;- reactiveValues(n = 0) observeEvent(input$up, { r$n &lt;- r$n + 1 }) observeEvent(input$down, { r$n &lt;- r$n - 1 }) output$n &lt;- renderText(r$n) } shinyApp(ui = ui, server = server) 3.8 Practice Problem #2 3.8.1 Solution #L02_Script08_PPSolution02 library(shiny) ui &lt;- fluidPage( numericInput(&quot;x&quot;, &quot;x&quot;, value = 50, min = 0, max = 100), actionButton(&quot;capture&quot;, &quot;capture&quot;), textOutput(&quot;out&quot;) ) server &lt;- function(input, output) { output$out &lt;- eventReactive(input$capture, { input$x }) } shinyApp(ui = ui, server = server) 3.9 Practice Problem #3 3.9.1 Solution #L02_Script09_PPSolution03 library(shiny) ui &lt;- fluidPage( actionButton(inputId = &quot;norm&quot;, label = &quot;Normal&quot;), actionButton(inputId = &quot;unif&quot;, label = &quot;Uniform&quot;), plotOutput(&quot;hist&quot;) ) server &lt;- function(input, output) { rv &lt;- reactiveValues(data = rnorm(100)) observeEvent(input$norm, { rv$data &lt;- rnorm(100) }) observeEvent(input$unif, { rv$data &lt;- runif(100) }) output$hist &lt;- renderPlot({ hist(rv$data) }) } shinyApp(ui = ui, server = server) "],["lesson-3.html", "Chapter 4 Lesson 3 4.1 Practice Problem #1 4.2 Practice Problem #2", " Chapter 4 Lesson 3 4.1 Practice Problem #1 4.1.1 Solution #L03_Script01_PPSolution01 library(shiny) library(bslib) library(thematic) thematic_shiny(font = &quot;auto&quot;) ui &lt;- fluidPage(theme = bs_theme( bg = &quot;#045c7c&quot;, fg = &quot;#ffe2a9&quot;, primary = &quot;#a4c37b&quot;) ,sliderInput(inputId = &quot;num&quot;, label = &quot;Choose a number&quot;, value = 25, min = 1, max = 100) ,textInput(inputId = &quot;title&quot;, label = &quot;Write a title&quot;, value = &quot;Histogram of Random Normal Values&quot;) ,plotOutput(&quot;hist&quot;) ) server &lt;- function(input, output) { output$hist &lt;- renderPlot({ hist(rnorm(input$num), main = input$title) }) } shinyApp(ui = ui, server = server) 4.2 Practice Problem #2 4.2.1 Solution #L03_Script02_PPSolution02 library(shiny) library(bslib) library(thematic) thematic_shiny(font = &quot;auto&quot;) ui &lt;- fluidPage(theme = bs_theme( bg = &quot;#045c7c&quot;, fg = &quot;#ffe2a9&quot;, primary = &quot;#a4c37b&quot;) # End ~ bs_theme , sidebarLayout( sidebarPanel( sliderInput(inputId = &quot;num&quot;, label = &quot;Choose a number&quot;, value = 25, min = 1, max = 100) ,textInput(inputId = &quot;title&quot;, label = &quot;Write a title&quot;, value = &quot;Histogram of Random Normal Values&quot;) ), # End ~ sidebarPanel mainPanel( plotOutput(&quot;hist&quot;) ) # End ~ mainPanel ) # End ~ sidebarLayout ) # End ~ fluidPage server &lt;- function(input, output) { output$hist &lt;- renderPlot({ hist(rnorm(input$num), main = input$title) }) } shinyApp(ui = ui, server = server) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
